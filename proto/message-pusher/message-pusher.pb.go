// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message-pusher/message-pusher.proto

package message_pusher

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConfigRequest struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=Keys,proto3" json:"Keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{0}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{1}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

type PushMessage struct {
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ChannelId            string   `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Expire               int32    `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushMessage) Reset()         { *m = PushMessage{} }
func (m *PushMessage) String() string { return proto.CompactTextString(m) }
func (*PushMessage) ProtoMessage()    {}
func (*PushMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{2}
}

func (m *PushMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMessage.Unmarshal(m, b)
}
func (m *PushMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMessage.Marshal(b, m, deterministic)
}
func (m *PushMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMessage.Merge(m, src)
}
func (m *PushMessage) XXX_Size() int {
	return xxx_messageInfo_PushMessage.Size(m)
}
func (m *PushMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PushMessage proto.InternalMessageInfo

func (m *PushMessage) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *PushMessage) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *PushMessage) GetExpire() int32 {
	if m != nil {
		return m.Expire
	}
	return 0
}

type Message struct {
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ChannelId            string   `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	MsgId                int64    `protobuf:"varint,4,opt,name=msgId,proto3" json:"msgId,omitempty"`
	Expire               int32    `protobuf:"varint,5,opt,name=expire,proto3" json:"expire,omitempty"`
	Requested            bool     `protobuf:"varint,6,opt,name=requested,proto3" json:"requested,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{3}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Message) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *Message) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *Message) GetExpire() int32 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *Message) GetRequested() bool {
	if m != nil {
		return m.Requested
	}
	return false
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{4}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	MsgId                int64    `protobuf:"varint,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	ChannelId            string   `protobuf:"bytes,2,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Msg                  []byte   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Expire               int32    `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Received             bool     `protobuf:"varint,5,opt,name=received,proto3" json:"received,omitempty"`
	Requested            bool     `protobuf:"varint,6,opt,name=requested,proto3" json:"requested,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *Response) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *Response) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Response) GetExpire() int32 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *Response) GetReceived() bool {
	if m != nil {
		return m.Received
	}
	return false
}

func (m *Response) GetRequested() bool {
	if m != nil {
		return m.Requested
	}
	return false
}

type StreamingRequest struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingRequest) Reset()         { *m = StreamingRequest{} }
func (m *StreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRequest) ProtoMessage()    {}
func (*StreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{6}
}

func (m *StreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRequest.Unmarshal(m, b)
}
func (m *StreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRequest.Marshal(b, m, deterministic)
}
func (m *StreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRequest.Merge(m, src)
}
func (m *StreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRequest.Size(m)
}
func (m *StreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRequest proto.InternalMessageInfo

func (m *StreamingRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Ping struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{7}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

type Pong struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_23ef910bf9ada3da, []int{8}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfigRequest)(nil), "message_pusher.ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "message_pusher.ConfigResponse")
	proto.RegisterType((*PushMessage)(nil), "message_pusher.PushMessage")
	proto.RegisterType((*Message)(nil), "message_pusher.Message")
	proto.RegisterType((*Request)(nil), "message_pusher.Request")
	proto.RegisterType((*Response)(nil), "message_pusher.Response")
	proto.RegisterType((*StreamingRequest)(nil), "message_pusher.StreamingRequest")
	proto.RegisterType((*Ping)(nil), "message_pusher.Ping")
	proto.RegisterType((*Pong)(nil), "message_pusher.Pong")
}

func init() {
	proto.RegisterFile("proto/message-pusher/message-pusher.proto", fileDescriptor_23ef910bf9ada3da)
}

var fileDescriptor_23ef910bf9ada3da = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xed, 0x6a, 0xd4, 0x40,
	0x14, 0xed, 0x6c, 0x76, 0xb7, 0xc9, 0xd5, 0x2e, 0xcb, 0x50, 0xec, 0x10, 0x6d, 0x09, 0xe3, 0x9f,
	0xf1, 0x87, 0xab, 0xe8, 0x23, 0x14, 0xa9, 0x45, 0x0b, 0x65, 0xaa, 0xf8, 0x53, 0xe2, 0xe6, 0x9a,
	0x04, 0xcd, 0x4c, 0xcc, 0x4c, 0x44, 0x1f, 0xc0, 0x17, 0xf1, 0x55, 0x7c, 0x31, 0xd9, 0x49, 0xb6,
	0xf9, 0x80, 0x50, 0xe8, 0xbf, 0x39, 0xf7, 0xdc, 0x3d, 0xf7, 0xdc, 0xbb, 0x27, 0xf0, 0xac, 0xac,
	0xb4, 0xd5, 0x2f, 0x0a, 0x34, 0x26, 0x4e, 0xf1, 0x79, 0x59, 0x9b, 0x0c, 0xab, 0x11, 0xdc, 0xb8,
	0x1e, 0xba, 0x6a, 0xab, 0x9f, 0x9b, 0x2a, 0x7f, 0x0a, 0x47, 0xe7, 0x5a, 0x7d, 0xcd, 0x53, 0x89,
	0x3f, 0x6a, 0x34, 0x96, 0x52, 0x98, 0xbf, 0xc3, 0xdf, 0x86, 0x91, 0xc8, 0x13, 0x81, 0x74, 0x6f,
	0xbe, 0x86, 0xd5, 0xbe, 0xc9, 0x94, 0x5a, 0x19, 0xe4, 0x1f, 0xe1, 0xc1, 0x75, 0x6d, 0xb2, 0xab,
	0x46, 0x8c, 0xae, 0xc1, 0x2b, 0x4c, 0xca, 0x66, 0x11, 0x11, 0x0f, 0xe5, 0xee, 0x49, 0x9f, 0x40,
	0xb0, 0xcd, 0x62, 0xa5, 0xf0, 0xfb, 0x65, 0xc2, 0xbc, 0x88, 0x88, 0x40, 0x76, 0x05, 0xfa, 0x08,
	0x96, 0xf8, 0xab, 0xcc, 0x2b, 0x64, 0x8b, 0x88, 0x88, 0x85, 0x6c, 0x11, 0xff, 0x43, 0xe0, 0xf0,
	0xbe, 0x9a, 0xc7, 0xb0, 0x28, 0x4c, 0x7a, 0x99, 0xb0, 0x79, 0x44, 0x84, 0x27, 0x1b, 0x30, 0x35,
	0x69, 0xa7, 0x55, 0x35, 0x1b, 0x63, 0xc2, 0x96, 0x11, 0x11, 0xbe, 0xec, 0x0a, 0xfc, 0x14, 0x0e,
	0x7b, 0xf7, 0x50, 0x71, 0x81, 0x8c, 0xb8, 0x79, 0xee, 0xcd, 0xff, 0x12, 0xf0, 0xf7, 0xa7, 0xe8,
	0xe6, 0x92, 0xfe, 0xdc, 0x81, 0xd7, 0xd9, 0xd8, 0x6b, 0xbb, 0x9b, 0xd7, 0xed, 0xd6, 0xf9, 0x9c,
	0x0f, 0x7c, 0x86, 0xe0, 0x57, 0xb8, 0xc5, 0xfc, 0x27, 0x26, 0x6e, 0x03, 0x5f, 0xde, 0xe2, 0x3b,
	0x76, 0x10, 0xb0, 0xbe, 0xb1, 0x15, 0xc6, 0x45, 0xae, 0x6e, 0xff, 0xdc, 0x63, 0x58, 0x6c, 0x75,
	0xad, 0xec, 0xde, 0xab, 0x03, 0xfc, 0x0c, 0xe6, 0xd7, 0xb9, 0x72, 0x1e, 0x8c, 0xad, 0xf4, 0x37,
	0x6c, 0xe9, 0x16, 0x39, 0x5e, 0x4f, 0xf3, 0xaf, 0xfe, 0xcd, 0x60, 0x75, 0x35, 0x88, 0x15, 0x7d,
	0x0f, 0xc1, 0x05, 0xda, 0x26, 0x34, 0xf4, 0x74, 0x33, 0x0c, 0xdd, 0x66, 0x90, 0xb8, 0xf0, 0x6c,
	0x8a, 0x6e, 0xb3, 0x76, 0x40, 0xdf, 0xc2, 0xd1, 0x2e, 0x6d, 0x1f, 0xf4, 0x79, 0x73, 0x41, 0xfa,
	0x78, 0xfc, 0x93, 0x5e, 0x18, 0x43, 0x36, 0x26, 0x7b, 0x4a, 0x12, 0x4e, 0x06, 0x4a, 0x9f, 0x72,
	0x9b, 0xdd, 0xd8, 0xd8, 0xd6, 0xe6, 0xfe, 0x9a, 0x6f, 0x00, 0x2e, 0x62, 0x8b, 0xcd, 0xb1, 0xe9,
	0x64, 0x67, 0x78, 0x32, 0x66, 0x5a, 0x71, 0x7e, 0x20, 0xc8, 0x4b, 0xf2, 0x65, 0xe9, 0x3e, 0xd0,
	0xd7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x62, 0xc0, 0x8b, 0x03, 0xcd, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagePusherClient is the client API for MessagePusher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagePusherClient interface {
	GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
	PushToChannel(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*Response, error)
	PushToChannelWithStatus(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*Response, error)
	GateStream(ctx context.Context, opts ...grpc.CallOption) (MessagePusher_GateStreamClient, error)
}

type messagePusherClient struct {
	cc *grpc.ClientConn
}

func NewMessagePusherClient(cc *grpc.ClientConn) MessagePusherClient {
	return &messagePusherClient{cc}
}

func (c *messagePusherClient) GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/message_pusher.Message_pusher/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagePusherClient) PushToChannel(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/message_pusher.Message_pusher/PushToChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagePusherClient) PushToChannelWithStatus(ctx context.Context, in *PushMessage, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/message_pusher.Message_pusher/PushToChannelWithStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagePusherClient) GateStream(ctx context.Context, opts ...grpc.CallOption) (MessagePusher_GateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessagePusher_serviceDesc.Streams[0], "/message_pusher.Message_pusher/GateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagePusherGateStreamClient{stream}
	return x, nil
}

type MessagePusher_GateStreamClient interface {
	Send(*Response) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type messagePusherGateStreamClient struct {
	grpc.ClientStream
}

func (x *messagePusherGateStreamClient) Send(m *Response) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagePusherGateStreamClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessagePusherServer is the server API for MessagePusher service.
type MessagePusherServer interface {
	GetConfig(context.Context, *ConfigRequest) (*ConfigResponse, error)
	PushToChannel(context.Context, *PushMessage) (*Response, error)
	PushToChannelWithStatus(context.Context, *PushMessage) (*Response, error)
	GateStream(MessagePusher_GateStreamServer) error
}

// UnimplementedMessagePusherServer can be embedded to have forward compatible implementations.
type UnimplementedMessagePusherServer struct {
}

func (*UnimplementedMessagePusherServer) GetConfig(ctx context.Context, req *ConfigRequest) (*ConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedMessagePusherServer) PushToChannel(ctx context.Context, req *PushMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToChannel not implemented")
}
func (*UnimplementedMessagePusherServer) PushToChannelWithStatus(ctx context.Context, req *PushMessage) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushToChannelWithStatus not implemented")
}
func (*UnimplementedMessagePusherServer) GateStream(srv MessagePusher_GateStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GateStream not implemented")
}

func RegisterMessagePusherServer(s *grpc.Server, srv MessagePusherServer) {
	s.RegisterService(&_MessagePusher_serviceDesc, srv)
}

func _MessagePusher_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagePusherServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message_pusher.Message_pusher/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagePusherServer).GetConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagePusher_PushToChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagePusherServer).PushToChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message_pusher.Message_pusher/PushToChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagePusherServer).PushToChannel(ctx, req.(*PushMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagePusher_PushToChannelWithStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagePusherServer).PushToChannelWithStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message_pusher.Message_pusher/PushToChannelWithStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagePusherServer).PushToChannelWithStatus(ctx, req.(*PushMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagePusher_GateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagePusherServer).GateStream(&messagePusherGateStreamServer{stream})
}

type MessagePusher_GateStreamServer interface {
	Send(*Message) error
	Recv() (*Response, error)
	grpc.ServerStream
}

type messagePusherGateStreamServer struct {
	grpc.ServerStream
}

func (x *messagePusherGateStreamServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagePusherGateStreamServer) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessagePusher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message_pusher.Message_pusher",
	HandlerType: (*MessagePusherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _MessagePusher_GetConfig_Handler,
		},
		{
			MethodName: "PushToChannel",
			Handler:    _MessagePusher_PushToChannel_Handler,
		},
		{
			MethodName: "PushToChannelWithStatus",
			Handler:    _MessagePusher_PushToChannelWithStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GateStream",
			Handler:       _MessagePusher_GateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/message-pusher/message-pusher.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message-pusher/message-pusher.proto

package message_pusher

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Say                  string   `protobuf:"bytes,1,opt,name=say,proto3" json:"say,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetSay() string {
	if m != nil {
		return m.Say
	}
	return ""
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{1}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type StreamingRequest struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingRequest) Reset()         { *m = StreamingRequest{} }
func (m *StreamingRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRequest) ProtoMessage()    {}
func (*StreamingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{3}
}
func (m *StreamingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRequest.Unmarshal(m, b)
}
func (m *StreamingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRequest.Marshal(b, m, deterministic)
}
func (dst *StreamingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRequest.Merge(dst, src)
}
func (m *StreamingRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRequest.Size(m)
}
func (m *StreamingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRequest proto.InternalMessageInfo

func (m *StreamingRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type StreamingResponse struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamingResponse) Reset()         { *m = StreamingResponse{} }
func (m *StreamingResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingResponse) ProtoMessage()    {}
func (*StreamingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{4}
}
func (m *StreamingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingResponse.Unmarshal(m, b)
}
func (m *StreamingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingResponse.Marshal(b, m, deterministic)
}
func (dst *StreamingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingResponse.Merge(dst, src)
}
func (m *StreamingResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingResponse.Size(m)
}
func (m *StreamingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingResponse proto.InternalMessageInfo

func (m *StreamingResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Ping struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{5}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

type Pong struct {
	Stroke               int64    `protobuf:"varint,1,opt,name=stroke,proto3" json:"stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_pusher_b95c76f3e3cf81ac, []int{6}
}
func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (dst *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(dst, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetStroke() int64 {
	if m != nil {
		return m.Stroke
	}
	return 0
}

func init() {
	proto.RegisterType((*Message)(nil), "message_pusher.Message")
	proto.RegisterType((*Request)(nil), "message_pusher.Request")
	proto.RegisterType((*Response)(nil), "message_pusher.Response")
	proto.RegisterType((*StreamingRequest)(nil), "message_pusher.StreamingRequest")
	proto.RegisterType((*StreamingResponse)(nil), "message_pusher.StreamingResponse")
	proto.RegisterType((*Ping)(nil), "message_pusher.Ping")
	proto.RegisterType((*Pong)(nil), "message_pusher.Pong")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagePusherClient is the client API for MessagePusher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagePusherClient interface {
	Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Stream(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (MessagePusher_StreamClient, error)
	PingPong(ctx context.Context, opts ...grpc.CallOption) (MessagePusher_PingPongClient, error)
}

type messagePusherClient struct {
	cc *grpc.ClientConn
}

func NewMessagePusherClient(cc *grpc.ClientConn) MessagePusherClient {
	return &messagePusherClient{cc}
}

func (c *messagePusherClient) Call(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/message_pusher.Message_pusher/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messagePusherClient) Stream(ctx context.Context, in *StreamingRequest, opts ...grpc.CallOption) (MessagePusher_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessagePusher_serviceDesc.Streams[0], "/message_pusher.Message_pusher/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagePusherStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MessagePusher_StreamClient interface {
	Recv() (*StreamingResponse, error)
	grpc.ClientStream
}

type messagePusherStreamClient struct {
	grpc.ClientStream
}

func (x *messagePusherStreamClient) Recv() (*StreamingResponse, error) {
	m := new(StreamingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *messagePusherClient) PingPong(ctx context.Context, opts ...grpc.CallOption) (MessagePusher_PingPongClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MessagePusher_serviceDesc.Streams[1], "/message_pusher.Message_pusher/PingPong", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagePusherPingPongClient{stream}
	return x, nil
}

type MessagePusher_PingPongClient interface {
	Send(*Ping) error
	Recv() (*Pong, error)
	grpc.ClientStream
}

type messagePusherPingPongClient struct {
	grpc.ClientStream
}

func (x *messagePusherPingPongClient) Send(m *Ping) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagePusherPingPongClient) Recv() (*Pong, error) {
	m := new(Pong)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessagePusherServer is the server API for MessagePusher service.
type MessagePusherServer interface {
	Call(context.Context, *Request) (*Response, error)
	Stream(*StreamingRequest, MessagePusher_StreamServer) error
	PingPong(MessagePusher_PingPongServer) error
}

func RegisterMessagePusherServer(s *grpc.Server, srv MessagePusherServer) {
	s.RegisterService(&_MessagePusher_serviceDesc, srv)
}

func _MessagePusher_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessagePusherServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message_pusher.Message_pusher/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessagePusherServer).Call(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessagePusher_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamingRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MessagePusherServer).Stream(m, &messagePusherStreamServer{stream})
}

type MessagePusher_StreamServer interface {
	Send(*StreamingResponse) error
	grpc.ServerStream
}

type messagePusherStreamServer struct {
	grpc.ServerStream
}

func (x *messagePusherStreamServer) Send(m *StreamingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MessagePusher_PingPong_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagePusherServer).PingPong(&messagePusherPingPongServer{stream})
}

type MessagePusher_PingPongServer interface {
	Send(*Pong) error
	Recv() (*Ping, error)
	grpc.ServerStream
}

type messagePusherPingPongServer struct {
	grpc.ServerStream
}

func (x *messagePusherPingPongServer) Send(m *Pong) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagePusherPingPongServer) Recv() (*Ping, error) {
	m := new(Ping)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MessagePusher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message_pusher.Message_pusher",
	HandlerType: (*MessagePusherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _MessagePusher_Call_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _MessagePusher_Stream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PingPong",
			Handler:       _MessagePusher_PingPong_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proto/message-pusher/message-pusher.proto",
}

func init() {
	proto.RegisterFile("proto/message-pusher/message-pusher.proto", fileDescriptor_message_pusher_b95c76f3e3cf81ac)
}

var fileDescriptor_message_pusher_b95c76f3e3cf81ac = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcd, 0x4e, 0xeb, 0x30,
	0x10, 0x85, 0x6b, 0x35, 0x37, 0xed, 0x9d, 0x45, 0x55, 0x46, 0x15, 0x54, 0xe1, 0x47, 0xc5, 0xab,
	0x74, 0x41, 0xa8, 0x60, 0x09, 0x3b, 0xd6, 0x95, 0x20, 0x3c, 0x00, 0x32, 0xc8, 0x32, 0x15, 0xb5,
	0x1d, 0x32, 0xce, 0x82, 0x97, 0xe5, 0x59, 0x50, 0x6c, 0x47, 0xa2, 0x29, 0xb0, 0xf3, 0x9c, 0xf3,
	0xcd, 0x68, 0xce, 0x18, 0x96, 0x55, 0x6d, 0x9d, 0xbd, 0xd4, 0x92, 0x48, 0x28, 0x79, 0x51, 0x35,
	0xf4, 0x2a, 0xeb, 0x5e, 0x59, 0x78, 0x06, 0x27, 0x51, 0x7d, 0x0a, 0x2a, 0x3f, 0x86, 0xd1, 0x3a,
	0x28, 0x38, 0x85, 0x21, 0x89, 0x8f, 0x39, 0x5b, 0xb0, 0xfc, 0x7f, 0xd9, 0x3e, 0xf9, 0x29, 0x8c,
	0x4a, 0xf9, 0xde, 0x48, 0x72, 0x88, 0x90, 0x18, 0xa1, 0x65, 0x74, 0xfd, 0x9b, 0x9f, 0xc0, 0xb8,
	0x94, 0x54, 0x59, 0x43, 0xbe, 0x59, 0x93, 0xea, 0x9a, 0x35, 0x29, 0x9e, 0xc3, 0xf4, 0xd1, 0xd5,
	0x52, 0xe8, 0x8d, 0x51, 0xdd, 0x94, 0x19, 0xfc, 0x7b, 0xb1, 0x8d, 0x71, 0x9e, 0x1b, 0x96, 0xa1,
	0xe0, 0x4b, 0x38, 0xf8, 0x46, 0xc6, 0x81, 0x3f, 0xa3, 0x67, 0x90, 0xdc, 0x6f, 0x8c, 0xc2, 0x43,
	0x48, 0xc9, 0xd5, 0xf6, 0x4d, 0x46, 0x3b, 0x56, 0xde, 0xb7, 0xbf, 0xfb, 0x57, 0x9f, 0x0c, 0x26,
	0xeb, 0x9d, 0x0b, 0xe0, 0x0d, 0x24, 0x77, 0x62, 0xbb, 0xc5, 0xa3, 0x62, 0xf7, 0x34, 0x45, 0x5c,
	0x3a, 0x9b, 0xef, 0x1b, 0x61, 0x47, 0x3e, 0xc0, 0x07, 0x48, 0xc3, 0xea, 0xb8, 0xe8, 0x53, 0xfd,
	0xf0, 0xd9, 0xf9, 0x1f, 0x44, 0x37, 0x70, 0xc5, 0xf0, 0x16, 0xc6, 0x6d, 0x44, 0x1f, 0x63, 0xd6,
	0x6f, 0x69, 0x9d, 0x6c, 0x5f, 0xb5, 0x46, 0xf1, 0x41, 0xce, 0x56, 0xec, 0x39, 0xf5, 0xdf, 0x7c,
	0xfd, 0x15, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x7f, 0x80, 0xeb, 0x13, 0x02, 0x00, 0x00,
}
